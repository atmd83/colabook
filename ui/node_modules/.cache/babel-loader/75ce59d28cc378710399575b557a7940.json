{"ast":null,"code":"import _slicedToArray from\"/Users/atmd/colabook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Search from'../components/search';import{useEffect,useState}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export default(function(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),brand=_useState2[0],setBrand=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),times=_useState4[0],setTimes=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showResults=_useState6[0],setShowResults=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),time=_useState8[0],setTime=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];useEffect(function(){if(brand&&brand!=='Coke or Pepsi'){axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/availability/\").concat(brand)).then(function(r){return r.data;}).then(setTimes).catch(function(e){return setError('Sorry, something went wrong. Please try again');});}},[brand]);return/*#__PURE__*/_jsx(\"main\",{className:'w-100',children:/*#__PURE__*/_jsx(Search,{brand:brand,setBrand:setBrand,times:times,showResults:showResults,setShowResults:setShowResults,setLoading:setLoading,time:time,setTime:setTime,loading:loading,error:error,setError:setError})});});","map":{"version":3,"sources":["/Users/atmd/colabook/ui/src/containers/home.js"],"names":["Search","useEffect","useState","axios","brand","setBrand","times","setTimes","showResults","setShowResults","time","setTime","loading","setLoading","error","setError","get","process","env","REACT_APP_API_URL","then","r","data","catch","e"],"mappings":"2IAAA,MAAOA,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAAQC,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,eAAe,UAAM,CACjB,cAA0BD,QAAQ,CAAC,EAAD,CAAlC,wCAAOE,KAAP,eAAcC,QAAd,eACA,eAA0BH,QAAQ,CAAC,EAAD,CAAlC,yCAAOI,KAAP,eAAcC,QAAd,eACA,eAAsCL,QAAQ,CAAC,KAAD,CAA9C,yCAAOM,WAAP,eAAoBC,cAApB,eACA,eAAwBP,QAAQ,CAAC,EAAD,CAAhC,yCAAOQ,IAAP,eAAaC,OAAb,eACA,eAA8BT,QAAQ,CAAC,KAAD,CAAtC,0CAAOU,OAAP,gBAAgBC,UAAhB,gBACA,gBAA0BX,QAAQ,CAAC,EAAD,CAAlC,2CAAOY,KAAP,gBAAcC,QAAd,gBAEAd,SAAS,CAAC,UAAM,CACZ,GAAGG,KAAK,EAAIA,KAAK,GAAK,eAAtB,CAAuC,CACnCD,KAAK,CAACa,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,iBAAzB,0BAA2Df,KAA3D,GACKgB,IADL,CACU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAN,EADX,EAEKF,IAFL,CAEUb,QAFV,EAGKgB,KAHL,CAGW,SAAAC,CAAC,QAAIT,CAAAA,QAAQ,CAAC,+CAAD,CAAZ,EAHZ,EAIH,CACJ,CAPQ,CAON,CAACX,KAAD,CAPM,CAAT,CASA,mBACI,aAAM,SAAS,CAAE,OAAjB,uBACI,KAAC,MAAD,EACI,KAAK,CAAEA,KADX,CAEI,QAAQ,CAAEC,QAFd,CAGI,KAAK,CAAEC,KAHX,CAII,WAAW,CAAEE,WAJjB,CAKI,cAAc,CAAEC,cALpB,CAMI,UAAU,CAAEI,UANhB,CAOI,IAAI,CAAEH,IAPV,CAQI,OAAO,CAAEC,OARb,CASI,OAAO,CAAEC,OATb,CAUI,KAAK,CAAEE,KAVX,CAWI,QAAQ,CAAEC,QAXd,EADJ,EADJ,CAiBH,CAlCD","sourcesContent":["import Search from '../components/search';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default () => {\n    const [brand, setBrand] = useState('');\n    const [times, setTimes] = useState([]);\n    const [showResults, setShowResults] = useState(false);\n    const [time, setTime] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if(brand && brand !== 'Coke or Pepsi') {\n            axios.get(`${process.env.REACT_APP_API_URL}/availability/${brand}`)\n                .then(r => r.data)\n                .then(setTimes)\n                .catch(e => setError('Sorry, something went wrong. Please try again'));\n        }\n    }, [brand])\n\n    return (\n        <main className={'w-100'}>\n            <Search\n                brand={brand}\n                setBrand={setBrand}\n                times={times}\n                showResults={showResults}\n                setShowResults={setShowResults}\n                setLoading={setLoading}\n                time={time}\n                setTime={setTime}\n                loading={loading}\n                error={error}\n                setError={setError}\n            />\n        </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/atmd/colabook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"/Users/atmd/colabook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/atmd/colabook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/atmd/colabook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2;import{Link}from'react-router-dom';import styled from'styled-components';import Button from'react-bootstrap/Button';import Error from'../error';import Logo from'../logo';import ResultsList from'../list';import Select from'../select';import axios from\"axios\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Search=function Search(_ref){var brand=_ref.brand,setBrand=_ref.setBrand,times=_ref.times,showResults=_ref.showResults,setShowResults=_ref.setShowResults,setLoading=_ref.setLoading,time=_ref.time,setTime=_ref.setTime,loading=_ref.loading,error=_ref.error,setError=_ref.setError;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),availability=_useState2[0],setAvailability=_useState2[1];var findAvailableRooms=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);if(!((!brand||!time)&&brand!=='Coke or Pepsi')){_context.next=6;break;}setError('Please select a brand and time.');setLoading(false);_context.next=11;break;case 6:setError('');_context.next=9;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/availability/\").concat(brand,\"/\").concat(time)).then(function(r){return r.data;}).then(setAvailability);case 9:setLoading(false);setShowResults(true);case 11:case\"end\":return _context.stop();}}},_callee);}));return function findAvailableRooms(){return _ref2.apply(this,arguments);};}();console.log('data',availability);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(SearchBox,{children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(Select,{label:'Coke or Pepsi',labelKey:'value',optionLabel:'label',options:[{label:'Coke',value:'coca-cola'},{label:'Pepsi',value:'pepsi'}],onChange:function onChange(evt){setBrand(evt.target.value);}}),/*#__PURE__*/_jsx(Select,{label:'Time',labelKey:'time',optionLabel:'time',options:times,onChange:function onChange(evt){setTime(evt.target.value);},disabled:brand===''||brand==='Coke or Pepsi'}),/*#__PURE__*/_jsx(Button,{disabled:loading||brand===''||brand==='Coke or Pepsi'||time==='Time'||time==='',onClick:findAvailableRooms,children:loading?'Loading…':'Find a room'}),/*#__PURE__*/_jsx(CancelLink,{to:'/cancel',children:\"cancel a booking\"})]}),showResults&&availability&&/*#__PURE__*/_jsx(ResultsList,{setShowResults:setShowResults,availability:availability}),/*#__PURE__*/_jsx(Error,{error:error,onClose:function onClose(){return setError(false);}})]});};export default Search;var SearchBox=styled.section(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;      \\n    flex-direction: column;\\n    text-align: center;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    align-items: center;\\n\"])));var CancelLink=styled(Link)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    font-size: 0.8rem;\\n    margin-top: 1rem;\\n    text-decoration: underline;\\n    color: \",\"\\n\"])),function(props){return props.theme.white;});","map":{"version":3,"sources":["/Users/atmd/colabook/ui/src/components/search/index.js"],"names":["Link","styled","Button","Error","Logo","ResultsList","Select","axios","useState","Search","brand","setBrand","times","showResults","setShowResults","setLoading","time","setTime","loading","error","setError","availability","setAvailability","findAvailableRooms","get","process","env","REACT_APP_API_URL","then","r","data","console","log","label","value","evt","target","SearchBox","section","CancelLink","props","theme","white"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nimport Error from '../error';\nimport Logo from '../logo';\nimport ResultsList from '../list';\nimport Select from '../select';\nimport axios from \"axios\";\nimport {useState} from \"react\";\n\nconst Search = ({\n    brand,\n    setBrand,\n    times,\n    showResults,\n    setShowResults,\n    setLoading,\n    time,\n    setTime,\n    loading,\n    error,\n    setError\n}) => {\n    const [availability, setAvailability] = useState([]);\n\n    const findAvailableRooms = async () => {\n        setLoading(true);\n\n        if((!brand || !time) && brand !== 'Coke or Pepsi') {\n            setError('Please select a brand and time.');\n            setLoading(false);\n        } else {\n            setError('');\n\n            await axios.get(`${process.env.REACT_APP_API_URL}/availability/${brand}/${time}`)\n                .then(r => r.data)\n                .then(setAvailability);\n\n            setLoading(false);\n            setShowResults(true)\n        }\n    }\n\n    console.log('data', availability)\n    return (\n        <>\n            <SearchBox>\n                <Logo />\n\n                <Select\n                    label={'Coke or Pepsi'}\n                    labelKey={'value'}\n                    optionLabel={'label'}\n                    options={[\n                        {label: 'Coke', value: 'coca-cola'},\n                        {label: 'Pepsi', value: 'pepsi'}\n                    ]}\n                    onChange={(evt) => {\n                        setBrand(evt.target.value);\n                    }}\n                />\n\n                <Select\n                    label={'Time'}\n                    labelKey={'time'}\n                    optionLabel={'time'}\n                    options={times}\n                    onChange={(evt) => {\n                        setTime(evt.target.value);\n                    }}\n                    disabled={brand === '' || brand === 'Coke or Pepsi'}\n                />\n\n                <Button disabled={loading || brand === '' || brand === 'Coke or Pepsi' || time === 'Time' || time === ''} onClick={findAvailableRooms}>{loading ? 'Loading…' : 'Find a room'}</Button>\n                <CancelLink to={'/cancel'}>cancel a booking</CancelLink>\n            </SearchBox>\n\n            {showResults && availability && (\n                <ResultsList setShowResults={setShowResults} availability={availability}/>\n            )}\n\n            <Error error={error} onClose={() => setError(false)} />\n        </>\n    );\n}\n\nexport default Search;\n\nconst SearchBox = styled.section`\n    display: flex;      \n    flex-direction: column;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    align-items: center;\n`;\n\nconst CancelLink = styled(Link)`\n    font-size: 0.8rem;\n    margin-top: 1rem;\n    text-decoration: underline;\n    color: ${props => props.theme.white}\n`;\n\n"]},"metadata":{},"sourceType":"module"}
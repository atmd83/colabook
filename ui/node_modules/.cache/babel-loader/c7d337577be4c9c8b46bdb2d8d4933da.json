{"ast":null,"code":"var _jsxFileName = \"/Users/atmd/colabook/ui/src/containers/home.js\",\n    _s = $RefreshSig$();\n\nimport Search from '../components/search';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [brand, setBrand] = useState('');\n  const [times, setTimes] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n  const [time, setTime] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (brand && brand !== 'Coke or Pepsi') {\n      axios.get(`${process.env.REACT_APP_API_URL}/availability/${brand}`).then(r => r.data).then(setTimes).catch(e => setError('Sorry, something went wrong. Please try again'));\n    }\n  }, [brand]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: 'w-100',\n    children: /*#__PURE__*/_jsxDEV(Search, {\n      brand: brand,\n      setBrand: setBrand,\n      times: times,\n      showResults: showResults,\n      setShowResults: setShowResults,\n      setLoading: setLoading,\n      time: time,\n      setTime: setTime,\n      loading: loading,\n      error: error,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}, \"pbiV1ebgvKtI+NGGfCKAuaW2fuc=\");","map":{"version":3,"sources":["/Users/atmd/colabook/ui/src/containers/home.js"],"names":["Search","useEffect","useState","axios","brand","setBrand","times","setTimes","showResults","setShowResults","time","setTime","loading","setLoading","error","setError","get","process","env","REACT_APP_API_URL","then","r","data","catch","e"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAK,IAAIA,KAAK,KAAK,eAAtB,EAAuC;AACnCD,MAAAA,KAAK,CAACa,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAAgBf,KAAM,EAAjE,EACKgB,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IADjB,EAEKF,IAFL,CAEUb,QAFV,EAGKgB,KAHL,CAGWC,CAAC,IAAIT,QAAQ,CAAC,+CAAD,CAHxB;AAIH;AACJ,GAPQ,EAON,CAACX,KAAD,CAPM,CAAT;AASA,sBACI;AAAM,IAAA,SAAS,EAAE,OAAjB;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAEA,KADX;AAEI,MAAA,QAAQ,EAAEC,QAFd;AAGI,MAAA,KAAK,EAAEC,KAHX;AAII,MAAA,WAAW,EAAEE,WAJjB;AAKI,MAAA,cAAc,EAAEC,cALpB;AAMI,MAAA,UAAU,EAAEI,UANhB;AAOI,MAAA,IAAI,EAAEH,IAPV;AAQI,MAAA,OAAO,EAAEC,OARb;AASI,MAAA,OAAO,EAAEC,OATb;AAUI,MAAA,KAAK,EAAEE,KAVX;AAWI,MAAA,QAAQ,EAAEC;AAXd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlCD","sourcesContent":["import Search from '../components/search';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default () => {\n    const [brand, setBrand] = useState('');\n    const [times, setTimes] = useState([]);\n    const [showResults, setShowResults] = useState(false);\n    const [time, setTime] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if(brand && brand !== 'Coke or Pepsi') {\n            axios.get(`${process.env.REACT_APP_API_URL}/availability/${brand}`)\n                .then(r => r.data)\n                .then(setTimes)\n                .catch(e => setError('Sorry, something went wrong. Please try again'));\n        }\n    }, [brand])\n\n    return (\n        <main className={'w-100'}>\n            <Search\n                brand={brand}\n                setBrand={setBrand}\n                times={times}\n                showResults={showResults}\n                setShowResults={setShowResults}\n                setLoading={setLoading}\n                time={time}\n                setTime={setTime}\n                loading={loading}\n                error={error}\n                setError={setError}\n            />\n        </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}
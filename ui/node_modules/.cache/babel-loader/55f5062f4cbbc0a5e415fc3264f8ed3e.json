{"ast":null,"code":"var _jsxFileName = \"/Users/atmd/colabook/ui/src/components/search/index.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport Error from '../error';\nimport Logo from '../logo';\nimport ResultsList from '../list';\nimport Select from '../select';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  brand,\n  setBrand,\n  times,\n  showResults,\n  setShowResults,\n  setLoading,\n  time,\n  setTime,\n  loading,\n  error,\n  setError\n}) => {\n  _s();\n\n  const [availability, setAvailability] = useState([]);\n\n  const findAvailableRooms = async () => {\n    setLoading(true);\n\n    if ((!brand || !time) && brand !== 'Coke or Pepsi') {\n      setError('Please select a brand and time.');\n      setLoading(false);\n    } else {\n      setError('');\n      await axios.get(`${process.env.REACT_APP_API_URL}/availability/${brand}/${time}`).then(r => r.data).then(setAvailability);\n      setLoading(false);\n      setShowResults(true);\n    }\n  };\n\n  console.log('data', availability);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: 'Coke or Pepsi',\n        labelKey: 'value',\n        optionLabel: 'label',\n        options: [{\n          label: 'Coke',\n          value: 'coca-cola'\n        }, {\n          label: 'Pepsi',\n          value: 'pepsi'\n        }],\n        onChange: evt => {\n          setBrand(evt.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: 'Time',\n        labelKey: 'time',\n        optionLabel: 'time',\n        options: times,\n        onChange: evt => {\n          setTime(evt.target.value);\n        },\n        disabled: brand === '' || brand === 'Coke or Pepsi'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: loading || brand === '' || brand === 'Coke or Pepsi' || time === 'Time' || time === '',\n        onClick: findAvailableRooms,\n        children: loading ? 'Loading…' : 'Find a room'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CancelLink, {\n        to: '/cancel',\n        children: \"cancel a booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), showResults && availability && /*#__PURE__*/_jsxDEV(ResultsList, {\n      setShowResults: setShowResults,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error,\n      onClose: () => setError(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Search, \"0SbZea4C1Lk1wrTLp2P3TAO9nhI=\");\n\n_c = Search;\nexport default Search;\nconst SearchBox = styled.section`\n    display: flex;      \n    flex-direction: column;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    align-items: center;\n`;\n_c2 = SearchBox;\nconst CancelLink = styled(Link)`\n    font-size: 0.8rem;\n    margin-top: 1rem;\n    text-decoration: underline;\n    color: ${props => props.theme.white}\n`;\n_c3 = CancelLink;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"SearchBox\");\n$RefreshReg$(_c3, \"CancelLink\");","map":{"version":3,"sources":["/Users/atmd/colabook/ui/src/components/search/index.js"],"names":["Link","styled","Button","Error","Logo","ResultsList","Select","axios","useState","Search","brand","setBrand","times","showResults","setShowResults","setLoading","time","setTime","loading","error","setError","availability","setAvailability","findAvailableRooms","get","process","env","REACT_APP_API_URL","then","r","data","console","log","label","value","evt","target","SearchBox","section","CancelLink","props","theme","white"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nimport Error from '../error';\nimport Logo from '../logo';\nimport ResultsList from '../list';\nimport Select from '../select';\nimport axios from \"axios\";\nimport {useState} from \"react\";\n\nconst Search = ({\n    brand,\n    setBrand,\n    times,\n    showResults,\n    setShowResults,\n    setLoading,\n    time,\n    setTime,\n    loading,\n    error,\n    setError\n}) => {\n    const [availability, setAvailability] = useState([]);\n\n    const findAvailableRooms = async () => {\n        setLoading(true);\n\n        if((!brand || !time) && brand !== 'Coke or Pepsi') {\n            setError('Please select a brand and time.');\n            setLoading(false);\n        } else {\n            setError('');\n\n            await axios.get(`${process.env.REACT_APP_API_URL}/availability/${brand}/${time}`)\n                .then(r => r.data)\n                .then(setAvailability);\n\n            setLoading(false);\n            setShowResults(true)\n        }\n    }\n\n    console.log('data', availability)\n    return (\n        <>\n            <SearchBox>\n                <Logo />\n\n                <Select\n                    label={'Coke or Pepsi'}\n                    labelKey={'value'}\n                    optionLabel={'label'}\n                    options={[\n                        {label: 'Coke', value: 'coca-cola'},\n                        {label: 'Pepsi', value: 'pepsi'}\n                    ]}\n                    onChange={(evt) => {\n                        setBrand(evt.target.value);\n                    }}\n                />\n\n                <Select\n                    label={'Time'}\n                    labelKey={'time'}\n                    optionLabel={'time'}\n                    options={times}\n                    onChange={(evt) => {\n                        setTime(evt.target.value);\n                    }}\n                    disabled={brand === '' || brand === 'Coke or Pepsi'}\n                />\n\n                <Button disabled={loading || brand === '' || brand === 'Coke or Pepsi' || time === 'Time' || time === ''} onClick={findAvailableRooms}>{loading ? 'Loading…' : 'Find a room'}</Button>\n                <CancelLink to={'/cancel'}>cancel a booking</CancelLink>\n            </SearchBox>\n\n            {showResults && availability && (\n                <ResultsList setShowResults={setShowResults} availability={availability}/>\n            )}\n\n            <Error error={error} onClose={() => setError(false)} />\n        </>\n    );\n}\n\nexport default Search;\n\nconst SearchBox = styled.section`\n    display: flex;      \n    flex-direction: column;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    align-items: center;\n`;\n\nconst CancelLink = styled(Link)`\n    font-size: 0.8rem;\n    margin-top: 1rem;\n    text-decoration: underline;\n    color: ${props => props.theme.white}\n`;\n\n"]},"metadata":{},"sourceType":"module"}